<?php

/**
 * BaseCliente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nome
 * @property string $logradouro
 * @property string $numero
 * @property string $complemento
 * @property string $bairro
 * @property integer $idCidade
 * @property string $telefoneResidencial
 * @property string $telefoneComercial
 * @property string $email
 * @property Cidade $Cidade
 * @property Doctrine_Collection $ClienteEquipamentos
 * @property Doctrine_Collection $OrdensServicoCliente
 * 
 * @method string              getNome()                 Returns the current record's "nome" value
 * @method string              getLogradouro()           Returns the current record's "logradouro" value
 * @method string              getNumero()               Returns the current record's "numero" value
 * @method string              getComplemento()          Returns the current record's "complemento" value
 * @method string              getBairro()               Returns the current record's "bairro" value
 * @method integer             getIdCidade()             Returns the current record's "idCidade" value
 * @method string              getTelefoneResidencial()  Returns the current record's "telefoneResidencial" value
 * @method string              getTelefoneComercial()    Returns the current record's "telefoneComercial" value
 * @method string              getEmail()                Returns the current record's "email" value
 * @method Cidade              getCidade()               Returns the current record's "Cidade" value
 * @method Doctrine_Collection getClienteEquipamentos()  Returns the current record's "ClienteEquipamentos" collection
 * @method Doctrine_Collection getOrdensServicoCliente() Returns the current record's "OrdensServicoCliente" collection
 * @method Cliente             setNome()                 Sets the current record's "nome" value
 * @method Cliente             setLogradouro()           Sets the current record's "logradouro" value
 * @method Cliente             setNumero()               Sets the current record's "numero" value
 * @method Cliente             setComplemento()          Sets the current record's "complemento" value
 * @method Cliente             setBairro()               Sets the current record's "bairro" value
 * @method Cliente             setIdCidade()             Sets the current record's "idCidade" value
 * @method Cliente             setTelefoneResidencial()  Sets the current record's "telefoneResidencial" value
 * @method Cliente             setTelefoneComercial()    Sets the current record's "telefoneComercial" value
 * @method Cliente             setEmail()                Sets the current record's "email" value
 * @method Cliente             setCidade()               Sets the current record's "Cidade" value
 * @method Cliente             setClienteEquipamentos()  Sets the current record's "ClienteEquipamentos" collection
 * @method Cliente             setOrdensServicoCliente() Sets the current record's "OrdensServicoCliente" collection
 * 
 * @package    sgos
 * @subpackage model
 * @author     Wellington Wagner
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCliente extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cliente');
        $this->hasColumn('nome', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('logradouro', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('numero', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('complemento', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('bairro', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('idCidade', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('telefoneResidencial', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('telefoneComercial', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cidade', array(
             'local' => 'idCidade',
             'foreign' => 'id'));

        $this->hasMany('Equipamento as ClienteEquipamentos', array(
             'local' => 'id',
             'foreign' => 'idCliente'));

        $this->hasMany('OrdemServico as OrdensServicoCliente', array(
             'local' => 'id',
             'foreign' => 'idCliente'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}