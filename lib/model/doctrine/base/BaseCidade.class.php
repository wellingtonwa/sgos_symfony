<?php

/**
 * BaseCidade
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nome
 * @property integer $idEstado
 * @property Estado $Estado
 * @property Doctrine_Collection $CidadeClientes
 * 
 * @method string              getNome()           Returns the current record's "nome" value
 * @method integer             getIdEstado()       Returns the current record's "idEstado" value
 * @method Estado              getEstado()         Returns the current record's "Estado" value
 * @method Doctrine_Collection getCidadeClientes() Returns the current record's "CidadeClientes" collection
 * @method Cidade              setNome()           Sets the current record's "nome" value
 * @method Cidade              setIdEstado()       Sets the current record's "idEstado" value
 * @method Cidade              setEstado()         Sets the current record's "Estado" value
 * @method Cidade              setCidadeClientes() Sets the current record's "CidadeClientes" collection
 * 
 * @package    sgos
 * @subpackage model
 * @author     Wellington Wagner
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCidade extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cidade');
        $this->hasColumn('nome', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('idEstado', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Estado', array(
             'local' => 'idEstado',
             'foreign' => 'id'));

        $this->hasMany('Cliente as CidadeClientes', array(
             'local' => 'id',
             'foreign' => 'idCidade'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}